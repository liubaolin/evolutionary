<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
        ProxyFactoryBean负责为其它Bean创建代理类，常见的属性配置如下：
            target: 代理的目标对象;
            proxyInterfaces:代理所要实现的接口，可以是多个接口，该属性还有一个别名属性interfaces;
            interceptorNames:需要织入目标对象的Bean列表，采用Bean的名称指定，这些Bean必须是实现了org.aopalliance.intercept.MethodInterceptor
                或org.springframework.aop.MethodBeforeAdvice的Bean,配置中的顺序对应调用顺序
            sigleton:返回的代理是否是单例，默认是单例
            optimize:当设置为true时，强制使用CGLib代理。（CGLib创建代理的速度慢，但是创建出来的代理对象运行效率高，而JDK的代理正好相反，所以单例的代理推荐用CGLib）
            proxyTargetClass:是否对类进行代理（而不是对接口进行代理），设置为true时，使用CGLib代理。设置为true时将忽略proxyInterfaces属性。
    -->

    <bean id="eatBeforeAdvice" class="richey.springaop.advice.EatBeforeAdvice"/>
    <bean id="targetObj" class="richey.springaop.advice.entity.Engineer"/>
    <bean id="engineer" class="org.springframework.aop.framework.ProxyFactoryBean"
        p:proxyInterfaces="richey.springaop.advice.entity.People"
        p:interceptorNames="eatBeforeAdvice"
        p:target-ref="targetObj"
    />


    <bean id="transactionManager" class="richey.springaop.advice.TransactionManager"/>
    <bean id="staffServiceTarget" class="richey.springaop.advice.service.StaffService"/>
    <bean id="staffService" class="org.springframework.aop.framework.ProxyFactoryBean"
    p:interceptorNames="transactionManager"
    p:target-ref="staffServiceTarget"
    p:proxyTargetClass="true"/>

</beans>